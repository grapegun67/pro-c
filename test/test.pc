#include <stdio.h>
#include <string.h>

EXEC SQL INCLUDE SQLCA;  

int main() {

	char buf_name[20];
	char get_name[20];
	char send_name[20];
	int buf_age = 0;
	int flag = 0;
	int get_age = 0;

EXEC SQL BEGIN DECLARE SECTION;

	VARCHAR user[20],pass[20],tnsname[20];
	char name[20];
	int  id;
	int i=0;
	const char* uid = "c##test";
	const char* pwd = "test";
	const char* tns = "orcl";

EXEC SQL END DECLARE SECTION;

	strcpy((char*)user.arr, uid);
        user.len=(unsigned short)strlen((char *)user.arr);
        strcpy((char*)pass.arr, pwd);
        pass.len=(unsigned short)strlen((char *)pass.arr);
        strcpy((char*)tnsname.arr, tns);
        tnsname.len=(unsigned short)strlen((char *)tnsname.arr);

EXEC SQL CONNECT :user IDENTIFIED BY :pass using :tnsname;
EXEC SQL WHENEVER SQLERROR GOTO stop_st;

printf("Connect successful\n");

	while(1){

		printf("1.insert 2.select 9.exit\n");
		scanf("%d", &flag);
	
		switch(flag)
		{
		case 1:			
			printf("name: ");
			memset(buf_name, 0, sizeof(buf_name));
			scanf("%s", buf_name);
			printf("age: ");
			scanf("%d", &buf_age);
			
			EXEC SQL INSERT INTO TEST 
				values(:buf_name, :buf_age);	
					
			EXEC SQL WHENEVER SQLERROR GOTO stop_st;
			printf("finish insert item\n");
			EXEC SQL commit work;

			break;
		case 2:
			
			printf("name: ");
			memset(buf_name, 0, sizeof(buf_name));	
			memset(get_name, 0, sizeof(buf_name));	
			scanf("%s", buf_name);

			EXEC SQL 
			 SELECT name, age
			 INTO :get_name, :get_age
			 FROM test
			 WHERE name =:buf_name;

			EXEC SQL WHENEVER SQLERROR GOTO stop_st;
			printf("[result] name:%s, age:%d\n", get_name, get_age);
			EXEC SQL commit;

			break;
		case 9: 
			return 0;
		}
	}

stop_st:
	printf("\n 에러메시지 =%s", sqlca.sqlerrm.sqlerrmc);

        return 0;
}
